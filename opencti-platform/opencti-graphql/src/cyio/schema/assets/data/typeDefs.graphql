  extend type Query {
    data(id: ID!): DataAsset @hasPermission(resources: "Asset:view")
    dataList(
      first: Int
      offset: Int
      orderedBy: DatumOrdering
      orderMode: OrderingMode
      filters: [DatumFiltering]
      filterMode: FilterMode
      search: String
    ): DataConnection @hasPermission(resources: "Asset:view")
  }
  
#####  Data 
##
  "An abstract interface that defines identifying information about an instance of data."
  interface DataAsset {
    # BasicObject
    "Uniquely identifies this object."
    id: ID!
    "Identifies the identifier defined by the standard."
    standard_id: String!
    "Identifies the type of the Object."
    entity_type: String!
    "Identifies the parent types of this object."
    parent_types: [String]!
    # LifecycleObject
    created: Timestamp
    modified: Timestamp
    # CoreObject
    "Identifies a set of terms used to describe this object. The terms are user-defined or trust-group defined."
    labels: [CyioLabel]
    "Identifies a list of CyioExternalReferences, each of which refers to information external to the data model. This property is used to provide one or more URLs, descriptions, or IDs to records in other systems."
    external_references: [CyioExternalReference]
    "Identifies one or more references to additional commentary on the Model."
    notes: [CyioNote]
    relationships(
      first: Int
      offset: Int
      orderedBy: OscalRelationshipsOrdering
      orderMode: OrderingMode
      filters: [OscalRelationshipsFiltering]
      filterMode: FilterMode
      search: String
    ): CyioRelationshipConnection
    # Asset
    asset_id: String
    name: String!
    description: String
    locations: [AssetLocation]
    # Data
  }

  # Pagination Types
  type DataConnection {
    pageInfo: PageInfo!
    edges: [DataEdge]
  }
  type DataEdge {
    cursor: String!
    node: DataAsset!
  }
  # Filtering Types
  input DatumFiltering {
    key: DatumFilter!
    values: [String]!
    operator: String
    filterMode: FilterMode
  }
  enum DatumOrdering {
    created
    modified
    labels
    asset_id
    name
  }
  enum DatumFilter {
    created
    modified
    label_name
    asset_id
  }

