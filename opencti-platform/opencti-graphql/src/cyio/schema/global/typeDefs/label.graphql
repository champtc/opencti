# declares the query entry-points for this type
extend type Query {
  cyioLabel(id: ID!): CyioLabel  @hasPermission(resources: "Cyio:view")
  cyioLabels(
    first: Int
    offset: Int
    orderBy: CyioLabelsOrdering
    orderMode: OrderingMode
    filters: [CyioLabelsFiltering]
    filterMode: FilterMode
    search: String
  ): CyioLabelConnection  @hasPermission(resources: "Cyio:view")
}

# declares the mutation entry-points for this type
extend type Mutation {
  createCyioLabel(input: CyioLabelAddInput): CyioLabel  @hasPermission(resources: "Label:update")
  deleteCyioLabel(id: ID!): String!  @hasPermission(resources: "Label:delete")
  deleteCyioLabels(id: [ID!]!): ID @hasPermission(resources: "Label:delete")
  editCyioLabel(id: ID!, input: [EditInput]!, commitMessage: String): CyioLabel  @hasPermission(resources: "Label:update")
  attachToCyioLabel(id: ID!, field: String!, entityId: ID!): Boolean @hasPermission(resources: "Labels:update")
  detachFromCyioLabel(id: ID!, field: String!, entityId: ID!): Boolean @hasPermission(resources: "Labels:update")
}

############## Labels
type CyioLabel implements BasicObject & LifecycleObject {
  # BasicObject
  "Uniquely identifies this object."
  id: ID!
  "Identifies the identifier defined by the standard."
  standard_id: String!
  "Identifies the type of the Object."
  entity_type: String!
  "Identifies the parent types of this object."
  parent_types: [String]!
  # Lifecycle Object
  "Identities the date and time at which the object was originally created."
  created: Timestamp
  "Identifies the date and time at which the object was last modified."
  modified: Timestamp
  # Cyio Label
  "Identifies the text value of the label."
  name: String!
  "Identifies the color to be applied to the label."
  color: String!
  "Identifies a human-readable description of the meaning of the label"
  description: String
}
input CyioLabelAddInput {
  name: String!
  color: String!
  description: String
}
enum CyioLabelsOrdering {
  "Created"
  created
  "Modified"
  modified
  "Name"
  name
}
enum CyioLabelsFilter {
  "Created"
  created
  "Modified"
  modified
  "Name"
  name
}
input CyioLabelsFiltering {
  key: LabelsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type CyioLabelConnection {
  pageInfo: PageInfo!
  edges: [CyioLabelEdge]
}
type CyioLabelEdge {
  cursor: String!
  node: CyioLabel!
}
